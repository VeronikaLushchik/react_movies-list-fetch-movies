{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api/api.ts","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","FindMovie","props","onAdd","useState","setMovie","query","setQuery","isValid","setValid","findMovie","a","fetch","then","response","json","movieFromServer","Response","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","disabled","App","data","find","m","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.567a0b18.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\ntype Props = {\n  onAdd: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = (props) => {\n  const { onAdd } = props;\n  const [movie, setMovie] = useState(null as Movie | null);\n  const [query, setQuery] = useState('');\n  const [isValid, setValid] = useState(true);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setValid(true);\n  };\n\n  const findMovie = async () => {\n    const movieFromServer = await getMovie(query);\n\n    if (movieFromServer.Response === 'False') {\n      setValid(false);\n      setMovie(null);\n\n      return;\n    }\n\n    setMovie({\n      title: movieFromServer.Title,\n      description: movieFromServer.Plot,\n      imgUrl: movieFromServer.Poster,\n      imdbUrl: `https://www.imdb.com/title/${movieFromServer.imdbID}/`,\n      imdbId: movieFromServer.imdbID,\n    });\n\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={isValid ? 'input' : 'input is-danger'}\n              value={query}\n              onChange={handleChange}\n            />\n          </div>\n          {!isValid && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={findMovie}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!movie}\n              onClick={() => {\n                onAdd(movie as Movie);\n                setMovie(null);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && (\n          <MovieCard {...movie} />\n        )}\n      </div>\n    </>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=99fbe74e&';\n\nexport const getMovie = (title: string) => {\n  return fetch(`${BASE_URL}&t=${title}`)\n    .then(response => response.json());\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App: React.FC = () => {\n  const [movies, setMovie] = useState(data);\n\n  const addMovie = (movie: Movie) => {\n    if (!movies.find(m => m.imdbId === movie.imdbId)) {\n      setMovie([movie, ...movies]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}